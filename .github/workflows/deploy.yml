name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install build tools for C++
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential

    - name: Add EC2 to known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.EC2_IP }} >> ~/.ssh/known_hosts

    - name: Archive files
      run: tar --exclude='server/venv' -czf project.tar.gz server/

    - name: Copy archive to EC2
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
        chmod 600 key.pem
        scp -i key.pem project.tar.gz ec2-user@${{ secrets.EC2_IP }}:/home/ec2-user/Option-Pricing/

    - name: Extract files on EC2
      run: |
        ssh -i key.pem ec2-user@${{ secrets.EC2_IP }} << EOF
          tar -xzf /home/ec2-user/Option-Pricing/project.tar.gz -C /home/ec2-user/Option-Pricing/
          if [ ! -f /home/ec2-user/Option-Pricing/server/app.py ]; then
            echo "Error: app.py not found after extraction."
            exit 1
          fi
          rm /home/ec2-user/Option-Pricing/project.tar.gz
        EOF

    - name: SSH into EC2 and compile C++ code
      run: |
        ssh -i key.pem ec2-user@${{ secrets.EC2_IP }} << EOF
          cd /home/ec2-user/Option-Pricing/server/calculations
          g++ -o monte_carlo MonteCarlo.cpp -lm
          g++ -o binomial_tree BinomialTree.cpp -lm
          g++ -o black_scholes BlackScholes.cpp -lm
        EOF

    - name: SSH into EC2 and deploy
      run: |
        ssh -i key.pem ec2-user@${{ secrets.EC2_IP }} << EOF
          cd /home/ec2-user/Option-Pricing/server
          if [ ! -d "venv" ]; then
            ~/python312/bin/python3.12 -m venv venv
          fi
          source venv/bin/activate || exit 1
          pip install --upgrade pip || exit 1
          pip install -r requirements.txt || exit 1
          sudo nginx -t || exit 1
          sudo systemctl restart gunicorn || exit 1
          sudo systemctl restart nginx || exit 1
        EOF

    - name: Cleanup SSH key
      run: rm key.pem
